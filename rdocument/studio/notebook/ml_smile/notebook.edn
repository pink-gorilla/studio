; saved on 2022-06-01 08:23:38
{:content [{:out "",
            :id :57cc0137-ff44-45b0-94a3-8ae4e0e97cf3,
            :code "(ns studio.notebook.ml-smile\n  (:require \n    [scicloj.ml.core :as ml]\n    [scicloj.ml.metamorph :as mm]\n    [scicloj.ml.dataset :as ds]))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:div.p-2.clj-nil [:p "nil"]]}
           {:out "",
            :id :6f56ebd0-1527-431e-a8ce-41cb1f7ad29f,
            :code "(def titanic-train\n  (ds/dataset \"https://github.com/scicloj/metamorph-examples/raw/main/data/titanic/train.csv\" {:key-fn keyword :parser-fn :string}))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:span
                     {:style {:color "deeppink"}}
                     "#'studio.notebook.ml-smile/titanic-train"]}
           {:out "",
            :id :29eeaf11-4f90-4bbb-acd4-b991ee8f5015,
            :code "(def titanic-test\n  (-> \"https://github.com/scicloj/metamorph-examples/raw/main/data/titanic/test.csv\"\n      (ds/dataset {:key-fn keyword :parser-fn :string})\n      (ds/add-column :Survived [\"\"] :cycle)))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:span
                     {:style {:color "deeppink"}}
                     "#'studio.notebook.ml-smile/titanic-test"]}
           {:out "",
            :id :6a99b073-f196-4cf0-b578-e3dd0ef39bea,
            :code "(def pipe-fn\n  (ml/pipeline\n   (mm/select-columns [:Survived :Pclass])\n   (mm/add-column :Survived (fn [ds] (map #(case % \"1\" \"yes\" \"0\" \"no\" nil \"\") (:Survived ds))))\n   (mm/categorical->number [:Survived :Pclass])\n   (mm/set-inference-target :Survived)\n   {:metamorph/id :model}\n   (mm/model {:model-type :smile.classification/logistic-regression})))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:span
                     {:style {:color "deeppink"}}
                     "#'studio.notebook.ml-smile/pipe-fn"]}
           {:out "",
            :id :ab96676f-01cc-4814-9f89-f93d1c4219d4,
            :code "(def trained-ctx\n  (pipe-fn {:metamorph/data titanic-train\n            :metamorph/mode :fit}))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:span
                     {:style {:color "deeppink"}}
                     "#'studio.notebook.ml-smile/trained-ctx"]}
           {:out "",
            :id :15f2c9ef-dab6-4921-bf86-f37babfcc8b8,
            :code "(def test-ctx\n  (pipe-fn\n   (assoc trained-ctx\n          :metamorph/data titanic-test\n          :metamorph/mode :transform)))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:span
                     {:style {:color "deeppink"}}
                     "#'studio.notebook.ml-smile/test-ctx"]}
           {:out "",
            :id :1d0fe913-f3fa-4294-9a37-d87a897a8f68,
            :code "(-> test-ctx :metamorph/data\n    (ds/column-values->categorical :Survived))",
            :ns "studio.notebook.ml-smile",
            :hiccup [:span.text-blue-500
                     "techml column!"
                     [user/text
                      "#tech.v3.dataset.column<string>[418]\n:Survived\n[no, no, yes, no, no, no, no, yes, no, no, no, no, no, yes, no, yes, yes, no, no, no...]"]]}],
 :meta {:id :cca7d2dd-e976-4eb5-ae71-f926ed5b5605,
        :eval-time "2022-06-01 08:23:38",
        :ns "studio.notebook.ml-smile",
        :java "17.0.3",
        :clojure "1.10.3"}}
